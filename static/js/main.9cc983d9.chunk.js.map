{"version":3,"sources":["components/livingThings.js","components/SoundUtilities.js","components/GameOfLife.js","components/Blog.js","components/About.js","components/NavBar.js","components/Home.js","App.js","index.js"],"names":["initializations","name","initialize","grid","len","iStart","jStart","length","Math","floor","midWay","i","allNotes","constructScale","startNote","type","octave","intervals","scale","startIndex","indexOf","ind","push","String","getChordFromScale","chordNumber","getAllChordsInScale","root","console","log","chords","concat","RESOLUTION","canvasColors","0","1","2","3","4","5","6","renderCanvas","ctx","col","row","cell","color","beginPath","rect","fillStyle","fill","GameOfLife","props","useRef","canvasRef","windowUpdated","useEffect","canvas","current","getContext","setupGrid","width","window","innerWidth","height","innerHeight","numCols","round","numRows","Array","map","_","initializeGrid","windowUpdateFunction","addEventListener","prevTimestamp","count","Tone","bpm","value","toDestination","kickDrum","volume","bass","oscillator","scheduleRepeat","time","triggerAttackRelease","schedule","oldGrid","r","c","newGrid","ui","li","j","lj","rj","aliveNeightbours","createNextGeneration","start","removeEventListener","stop","id","ref","style","position","left","bottom","zIndex","onClick","Blog","About","NavBar","selectedPage","match","params","className","page","to","Home","App","useState","isMusicOn","gameInitialization","gameState","setGameState","path","component","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cc983d9.chunk.js","sourcesContent":["export const famousLifeObjects = [\n    {\n        name: \"Glider\",\n        size: [6, 6],\n        initialize: function(grid, i, j , vOrient = 0, hOrient =0 ){\n            const obj = [\n                [0, 1, 0],\n                [0, 1, 1],\n                [1, 0, 1]\n            ]\n            if(vOrient===0) vOrient=Math.random()>0.5 ? 1:-1\n            if(hOrient === 0) hOrient=Math.random()>0.5 ? 1: -1\n\n            const rStart = vOrient === 1 ? i : i+this.size[0] -1\n            const cStart= hOrient === 1 ? j : j+this.size[1] -1\n            const numRows = grid.length\n            const numCols = grid[0].length\n            \n            obj.forEach((row, x) => row.forEach((val, y) => {\n                grid[(rStart + vOrient * x + numRows) % numRows]\n                [(cStart + hOrient * y + numCols) % numCols] = val\n            }\n            ))\n            return this.size\n        }\n    },\n    {\n        name: \"Glider Gun\",\n        size: [1000, 11],\n        initialize: [\n            [0, 0, 1, 1, 0, 0, 0, 0, 0],\n            [0, 0, 1, 1, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [1, 1, 0, 0, 0, 1, 1, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 1, 0, 0, 0, 1, 0, 0, 0],\n            [0, 0, 1, 1, 1, 0, 0, 0, 0],\n            [0, 0, 1, 1, 1, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 1, 0, 0, 0],\n            [0, 0, 0, 0, 1, 1, 1, 0, 0],\n            [0, 0, 0, 1, 0, 0, 0, 1, 0],\n            [0, 0, 0, 0, 0, 1, 0, 0, 0],\n            [0, 0, 1, 0, 0, 0, 0, 0, 1],\n            [0, 0, 1, 0, 0, 0, 0, 0, 1],\n            [0, 0, 0, 1, 0, 0, 0, 1, 0],\n            [0, 0, 0, 0, 1, 1, 1, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 1, 1, 0, 0, 0],\n            [0, 0, 0, 0, 1, 1, 0, 0, 0]\n        ]\n    },\n    {\n        name: \"Blinker\",\n        padding: [1, 1],\n        jump: [2, 2],\n        obj: [\n            [1, 1, 1],\n        ]\n    },\n    {\n\n    }\n]\n\nexport const initializations = [\n    {\n        name: \"theBigX\",\n        initialize : function(grid){\n            let len, iStart, jStart\n            if(grid.length> grid[0].length) { \n                len= grid[0].length\n                iStart=Math.floor((grid.length - len)/2)\n                jStart=0\n            }\n            else{\n                len= grid.length\n                jStart=Math.floor((grid[0].length - len)/2)\n                iStart=0\n            }\n            let midWay= Math.floor(len/2)\n            for(let i=0;i<midWay;i++){\n                grid[iStart+i][jStart+i]=grid[iStart+len-1-i][jStart+len-1-i]=grid[iStart+len-1-i][jStart+i]=grid[iStart+i][jStart+len-1-i]=1\n            }\n            grid[iStart+midWay][jStart+midWay]=1\n        }\n    },\n    {\n        name: \"marchingGliders\",\n        initialize: function(grid){\n            \n        }\n    },\n\n]\n// export default famousLifeObjects;","const allNotes=[\"C\", \"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\", \"A#\", \"B\"]\n\nfunction constructScale(startNote, type, octave){\n    let intervals\n    if(type==\"major\")\n        intervals=[0,2,4,5,7,9,11,12]    \n    else if(type==\"minor\")\n        intervals=[0,2,3,5,7,8,10,12]\n    const scale=[]\n    const startIndex=allNotes.indexOf(startNote)\n    for(let i=0;i<7;i++){\n        const ind=startIndex+intervals[i]\n        // if(ind> 11) \n        // scale.push(allNotes[ind%12]+toString(octave - 1))\n        // else\n        // scale.push(allNotes[ind]+toString(octave))\n        scale.push(allNotes[ind%12]+String(octave+~~(ind/12)))\n    }    \n    return scale\n}\n\nfunction getChordFromScale(scale, chordNumber){\n    return [scale[chordNumber] , scale[(chordNumber+2)%scale.length], scale[(chordNumber+4)%scale.length]]\n}\n\nexport function getAllChordsInScale(root, type,octave=3){\n    console.log(\"fnc called\")\n    const chords={}\n    const scale=constructScale(root, type, octave).concat(constructScale(root, type , octave+1))\n    const bassNotes=constructScale(root, type, octave-1)\n    let bassNotes2\n    if (octave -2 >0){\n        bassNotes2=constructScale(root, type, octave-2)\n    }\n    for(let i=0;i<7;i++){\n        chords[i]=getChordFromScale(scale, i)\n        // chords[i].push(bassNotes2[i])\n        console.log(chords)\n        // if(bassNotes2) chords[i].push(bassNotes2[i])\n    }\n    console.log(chords)\n    return chords\n}","import { useState, useEffect, useRef } from \"react\";\nimport { initializations } from \"./livingThings\";\nimport * as Tone from 'tone';\nimport { getAllChordsInScale } from './SoundUtilities';\n\nconst RESOLUTION = 20\n\nlet initializeGrid = (numRows, numCols) => {\n    console.log(\"initializing life\")\n    const grid = [...Array(numRows)].map(_ => Array(numCols).fill(0));\n    initializations[0].initialize(grid)\n\n    return grid\n}\n\nlet createNextGeneration = (oldGrid) => {\n\n    const r = oldGrid.length\n    const c = oldGrid[0].length\n    const newGrid = [...Array(r)].map(_ => Array(c).fill(0));\n    for (let i = 0; i < r; i++) {\n        let ui = (r + i - 1) % r\n        let li = (r + i + 1) % r\n        for (let j = 0; j < c; j++) {\n            let lj = (c + j - 1) % c;\n            let rj = (c + j + 1) % c;\n            let aliveNeightbours = oldGrid[i][lj] + oldGrid[ui][lj] + oldGrid[ui][j] + oldGrid[ui][rj] + oldGrid[i][rj] + oldGrid[li][rj]\n                + oldGrid[li][j] + oldGrid[li][lj]\n            if (oldGrid[i][j] === 1 && (aliveNeightbours === 3 || aliveNeightbours === 2))\n                newGrid[i][j] = 1\n            else if (oldGrid[i][j] === 0 && aliveNeightbours === 3)\n                newGrid[i][j] = 1\n        }\n    }\n    return newGrid;\n}\n\nconst canvasColors = {\n    0: \"#6B7280\",\n    1: \"#393E46\",\n    2: \"#3B82F6\",\n    3: \"#6B7280\",\n    4: \"#6B7280\",\n    5: \"#6B7280\",\n    6: \"#6B7280\"\n\n}\nlet renderCanvas = ((ctx, grid) => {\n    for (let col = 0; col < grid.length; col++) {\n        for (let row = 0; row < grid[col].length; row++) {\n            const cell = grid[col][row]\n            const color = canvasColors[(row + col) % 6]\n            ctx.beginPath()\n            ctx.rect(col * RESOLUTION, row * RESOLUTION, RESOLUTION, RESOLUTION)\n            ctx.fillStyle = cell ? color : '#FFF'\n            ctx.fill()\n        }\n    }\n})\nconsole.log(\"running all lines\")\n\nexport default function GameOfLife(props) {\n\n    // let [grid, setGrid] = useState(initializeGame)\n    let grid = useRef(null)\n    console.log(grid)\n    let ref = useRef(null)\n    let canvasRef = useRef(null)\n    let windowUpdated = useRef(true)\n    console.log(\"rerendering component\")\n    //Setting up Stuff\n\n    useEffect(() => {\n        // setup up window resize \n        // Tone.start()\n\n        console.log(\"starting  game setup\")\n        const canvas = canvasRef.current\n        const ctx = canvas.getContext('2d')\n        const setupGrid = () => {\n\n            canvas.width = window.innerWidth\n            canvas.height = window.innerHeight\n            console.log(canvas)\n            const numCols = Math.round(canvas.width / RESOLUTION)\n            const numRows = Math.round(canvas.height / RESOLUTION)\n            grid.current = initializeGrid(numCols, numRows)\n            renderCanvas(ctx, grid.current)\n        }\n        // const updateFunction = () => setGame(() => initializeGrid)\n        setupGrid()\n        const windowUpdateFunction = () => {\n            console.log(\"windowResized\")\n            windowUpdated.current = true\n        }\n        window.addEventListener(\"resize\", windowUpdateFunction)\n        let prevTimestamp = 0\n        let count = 0\n        Tone.Transport.bpm.value = 60\n        const synth = new Tone.Synth().toDestination();\n        const chordPlayer = new Tone.PolySynth().toDestination();\n        const kickDrum = new Tone.MembraneSynth({\n            volume: 6\n        }).toDestination();\n\n        const bass = new Tone.Synth({\n            oscillator: {\n                type: \"triangle\"\n            }\n        }).toDestination();\n\n        console.log(\"synth initialized\");\n        console.log(getAllChordsInScale)\n        const chords = getAllChordsInScale(\"A\", \"minor\");\n        Tone.Transport.scheduleRepeat((time) => {\n            //instead of scheduling visuals inside of here\n            //schedule a deferred callback with Tone.Draw\n            count += 1\n            console.log(count)\n            if(count% 8 ===0){\n                bass.triggerAttackRelease(\"F1\", \"4n\", time)\n            }\n\n            // bass.triggerAttackRelease(\"F1\", \"8n\", time, 0.9)\n            kickDrum.triggerAttackRelease(\"C1\", '16n', time, 0.3)\n            if (count %  8== 1) {\n\n                // console.log(\"looping yo! \")\n                console.log(time - prevTimestamp)\n                prevTimestamp = time\n                // console.log(Tone.Transport.position)\n                // console.log(Tone.Transport.getTicksAtTime(time))\n                // synth.triggerAttackRelease(AMinorScaleWithOctave[count % 8], \"16n\")\n                // chordPlayer.triggerAttackRelease(chords[count % 7], \"4n\", time)\n            }\n            if(count%2 ==0){\n                Tone.Draw.schedule(() => {\n                    //this callback is invoked from a requestAnimationFrame\n                    //and will be invoked close to AudioContext time\n                    if (windowUpdated.current) {\n                        windowUpdated.current = false\n                        setupGrid()\n                    }\n                    \n                    grid.current = createNextGeneration(grid.current)\n                    renderCanvas(ctx, grid.current)\n                }, time) //use AudioContext time of the event\n            }\n        }, \"16n\")\n\n        Tone.Transport.start()\n        // const update = (timestamp) => {\n        //     if (!prevTimestamp) {\n        //         prevTimestamp = timestamp\n        //     }\n        //     if (timestamp - prevTimestamp > 500) {\n        //         if(windowUpdated.current){\n        //             windowUpdated.current=false\n        //             setupGrid()\n        //         }\n        //         prevTimestamp = timestamp\n        //         grid.current = createNextGeneration(grid.current)\n        //         renderCanvas(ctx, grid.current)\n        //     }\n        //     window.requestAnimationFrame(update)\n        // }\n        // window.requestAnimationFrame(update)\n\n        return () => {\n            window.removeEventListener(\"resize\", windowUpdateFunction)\n            Tone.Transport.stop()\n        }\n    }, [])\n\n    console.log(\"just before return\")\n    return (\n        <canvas\n            id='game-of-life'\n            ref={canvasRef}\n            style={{\n                position: 'absolute',\n                left: 0,\n                bottom: 0,\n                zIndex: -1\n            }}\n            onClick={() => Tone.start()}\n        />\n    )\n}","import GameOfLife from \"./GameOfLife\"\nexport default function Blog(){\n    //Read Markdown files \n    return (<div></div>)\n\n}","import GameOfLife from \"./GameOfLife\"\nexport default function About(){\n    //Read Markdown files \n    return (<div></div>)\n}","import { Link, useParams } from 'react-router-dom'\n\nfunction PageLink(props) {\n\n}\nexport default function NavBar(props) {\n  let selectedPage = props.match.params.id ? props.match.params.id : \"home\"\n\n  const pages = [\"home\", \"about\", \"blog\"]\n  return (\n    <nav className=\"bg-transparent fixed top-0 w-full\">\n      <div className=\"container flex items-center py-4 px-2 justify-center md:justify-start space-x-8  capitalize\">\n        {pages.map((page) => page === selectedPage ?\n          <Link to={`/${page}`} className=\"p-2 text-gray-800 rounded-md  border-8 font-semibold \\\n         border-blue-500  bg-opacity-60  bg-white\">{page}</Link>\n          : <Link to={`/${page}`} className=\"p-2 rounded-md hover:border-blue-300 border-8 font-semibold \\\n          text-gray-800 border-gray-800 bg-opacity-60 bg-white \">{page}</Link>)}\n      </div>\n    </nav>\n\n  )\n}\n","import GameOfLife from \"./GameOfLife\";\n\n\nexport default function Home(){\n\n    return (\n        <>\n        {/* <GameOfLife/> */}\n        <div className=\"absolute left-0 top-1/2 text-lg border-black rounded-md bg-white bg-opacity-70 border-8 p-10  mx-5\">\n            Hi! I am Ayush. <br></br>\n\n            I love Maths, Computer Science and Music.\n\n        </div>\n        \n        </>\n    )\n}","import React, { useState } from 'react';\nimport GameOfLife from './components/GameOfLife'\nimport Blog from './components/Blog'\nimport About from './components/About'\nimport NavBar from './components/NavBar';\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from 'react-router-dom'\nimport Home from './components/Home';\nfunction App() {\n  const [gameState, setGameState] = useState(() => {\n    return {\n      isMusicOn: false,\n      gameInitialization: null\n    }\n  })\n  return (\n    <HashRouter>\n      <GameOfLife gameState={gameState} />\n      <Route path=\"/\" component={NavBar} />\n      <Route path=\"/:id\" component={NavBar} />\n      <Switch>\n\n        <Route exact path=\"/blog\" component={Blog} />\n        <Route exact path=\"/about\" component={About} />\n        <Route path=\"/\" render={() => <Home setGameState={setGameState}></Home>} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}